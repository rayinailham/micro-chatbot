version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: chatbot-postgres-test
    restart: unless-stopped
    environment:
      POSTGRES_USER: chatbot_user
      POSTGRES_PASSWORD: chatbot_password
      POSTGRES_DB: chatbot_service
    ports:
      - "5435:5432"  # Using port 5435 (available)
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U chatbot_user -d chatbot_service"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - chatbot-test-network

  chatbot-app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: chatbot-app-test
    restart: unless-stopped
    environment:
      PORT: 3000
      NODE_ENV: development
      DATABASE_URL: postgresql://chatbot_user:chatbot_password@postgres:5432/chatbot_service
      OPENROUTER_API_KEY: ${OPENROUTER_API_KEY}
      OPENROUTER_BASE_URL: https://openrouter.ai/api/v1
      OPENROUTER_MODEL: ${OPENROUTER_MODEL:-deepseek/deepseek-chat-v3.1:free}
    ports:
      - "3007:3000"  # Using port 3007 (available) mapped to container port 3000
    volumes:
      # Mount source code for hot reload
      - ./src:/app/src:ro
      - ./package.json:/app/package.json:ro
      - ./tsconfig.json:/app/tsconfig.json:ro
      - ./drizzle.config.ts:/app/drizzle.config.ts:ro
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - chatbot-test-network

networks:
  chatbot-test-network:
    driver: bridge

volumes:
  postgres_test_data:
    driver: local

